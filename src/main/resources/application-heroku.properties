# Heroku Production Configuration
# This file is used on Heroku (application.properties.template is the base)

server.port=${PORT:8080}
spring.application.name=smart-university-backend

# Heroku PostgreSQL - Uses DATABASE_URL environment variable
# DATABASE_URL format: postgres://user:password@host:port/database
# JDBC format: jdbc:postgresql://host:port/database
# IMPORTANT: Set these as Heroku Config Vars, NOT hardcoded here!
spring.datasource.url=${JDBC_DATABASE_URL:${DATABASE_URL}}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.smartuniversity=DEBUG
logging.level.org.springframework.web=DEBUG

# CORS configuration - MUST SET CORS_ALLOWED_ORIGINS on Heroku Config Vars
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://l3project.netlify.app,https://athena.mehara.io}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JWT Configuration
# IMPORTANT: Set JWT_SECRET as Heroku Config Var!
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400}

# AWS S3 Configuration
aws.access-key-id=${AWS_ACCESS_KEY_ID}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket-name=${AWS_S3_BUCKET:thirdyearproject}

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Jackson Configuration for Java 8 Date/Time
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-date-timestamps-as-nanoseconds=false
spring.jackson.deserialization.read-date-timestamps-as-nanoseconds=false
spring.jackson.modules=com.fasterxml.jackson.datatype.jsr310.JavaTimeModule
